function [tm,ids,LOG,tn,cn,messages]=incidences(torg,Tol,limitation,messages)% [tm,ids,LOG]=incidences(torg,Tol,limitation)% Detection of anormal beats.% torg/tm  = normal beats series (in seconds)% ids = beat indices following each incidence% LOG = Report of the analysis% Tol = Tolerance to ectopic beats (1, default).% Limitation = 1 default, 0 always perfom HRV analysis independently of% physiological limitation in the variation of hear rate.% (c) Javier Mateo, 7-Dic-2001. Modified by Eduardo Gil, 30-Dic-2009.% Modified: 6JUN2011 Rute%%%%%1JUN2011%%%%if nargin<4     messages.status=1;endmessages.setup.incidencias_Tol=Tol;if ~isfield(messages,'warnings'), messages.warnings=[]; endif ~isfield(messages,'errors'), messages.errors=[]; endif ~isfield(messages,'errors_desc'), messages.errors_desc=[]; endif isfield(messages,'status')    if messages.status~=1        messages.warnings=[messages.warnings {['Initial status=' num2str(messages.status) '. status changed to 1']}];    endmessages.status=1;end%%%%%%%%try%1JUN2011start=clock; RC=[char(13),char(10)];if nargin<3, limitation=0; endif nargin<2, Tol=1;endtn=torg(:);tn=[tn(diff(tn)>0);tn(end)];cn=repmat('c',length(tn),1);% LOG = ['Informe de anomalias en la serie de latidos',RC];LOG = ['Report of beat series anomalies',RC];LOG=[LOG,'===========================================',RC,RC];ddt=diff(1./diff(tn));addt=abs(ddt);% ddt2=ddt.^2;wind=min(50,2*length(tn)-4);% mf=medfilt1([flipud(ddt2(1:wind/2));ddt2;flipud(ddt2(end-wind/2+1:end))],wind-1);mf=medfilt1([flipud(addt(1:wind/2));addt;flipud(addt(end-wind/2+1:end))],wind-1);% TOL=Tol*(mf(wind/2+1:end-wind/2)).^0.25; TOL(TOL<0.05)=0.05;TOL(TOL>0.5)=0.5;TOL=Tol*(mf(wind/2+1:end-wind/2)).^0.5; TOL(TOL<0.05)=0.05;TOL(TOL>0.3)=0.3;if any(TOL>=0.5)&& limitation        tm=[];ids=[];tn=[];cn=[];    %     LOG=[LOG,'El fichero presenta zonas de extrema variabilidad.',RC];    %    %     LOG=[LOG,'Se desaconseja el estudio de HRV en este fichero.',RC];    LOG=[LOG,'Serie has zones of extreme variability.',RC];    LOG=[LOG,'It is advised against the HRV studio in this serie.',RC];    messages.warnings=[messages.warnings {'Variability is too high to guaranty adequate correction using incidencias. Empty output is produced.'}];%1JUN2011    returnendidx=find(abs(ddt)>TOL);while ~isempty(idx) && idx(1)<3    tn=tn(2:end);    cn=cn(2:end);    TOL=TOL(2:end);    ddt=diff(1./diff(tn));    idx=find(abs(ddt)>TOL);endwhile ~isempty(idx)    id=idx(1);    N=1;    T=TOL(id);    C=0;    while C==0 && length(tn)>id+N+2        N=N+1;        [C,tm]=check(tn(id-2:id+N+2),T);    end    if C        tn=[tn(1:id-2+C);tm;tn(id+N-2+C:end)];        cn=[cn(1:id-2+C);repmat('X',length(tm),1);cn(id+N-2+C:end)];        TOL=[TOL(1:id-2+C);repmat(T,length(tm),1);TOL(id+N-2+C:end)];    else        tn=tn(1:end-1);        cn=cn(1:end-1);        TOL=TOL(1:length(tn)-2);    end    ddt=diff(1./diff(tn));    idx=find(abs(ddt)>TOL);end%id=find(filtfilt([1 1],1,~ismember(cn,'Nb?'))<1.5);id=find(cn=='c');tm=tn(id);ids=find(diff(id)>1)+1;procdur=etime(clock,start);% LOG=[LOG,'Posicion primer latido original: ',num2str(torg(1)),' s.',RC];% % LOG=[LOG,'Posicion primer latido normal:   ',num2str(tm(1)),' s.',RC];% % LOG=[LOG,'Posicion ultimo latido original: ',num2str(torg(end)),' s.',RC];% % LOG=[LOG,'Posicion ultimo latido normal:   ',num2str(tm(end)),' s.',RC];% % LOG=[LOG,'Numero de latidos originales:    ',num2str(length(torg)),RC];% % LOG=[LOG,'Numero de latidos normales:      ',num2str(length(tm)),RC];% % LOG=[LOG,'Numero de anomalias encontradas: ',num2str(length(ids)),RC];% % LOG=[LOG,'Maximo intervalo entre normales: ',num2str(max(diff(tm))),' s.',RC];% % LOG=[LOG,'Periodo cardiaco medio:          ',num2str(mean(diff(tn)),2),' s.',RC];% % LOG=[LOG,'Duracion procesado de anomalias: ',num2str(procdur,2),' s.',RC];LOG=[LOG,'Position of first original beat: ',num2str(torg(1)),' s.',RC];LOG=[LOG,'Position of first normal beat:   ',num2str(tm(1)),' s.',RC];LOG=[LOG,'Position of last original beat: ',num2str(torg(end)),' s.',RC];LOG=[LOG,'Position of last normal beat:   ',num2str(tm(end)),' s.',RC];LOG=[LOG,'Number of original beats:    ',num2str(length(torg)),RC];LOG=[LOG,'Number of normal beats:      ',num2str(length(tm)),RC];LOG=[LOG,'Number of anomalies: ',num2str(length(ids)),RC];LOG=[LOG,'Maximum interval about normal beats: ',num2str(max(diff(tm))),' s.',RC];LOG=[LOG,'Mean Heart Rate:          ',num2str(mean(diff(tn)),2),' s.',RC];LOG=[LOG,'Lenght of anomalies processing: ',num2str(procdur,2),' s.',RC];catch me    messages.status=0;    messages.errors=[messages.errors {'Error on incidencias'}];    messages.errors_desc=[messages.errors_desc {me.messages}];    tm=[];ids=[];tn=[];cn=[];endfunction [C,tm]=check(tt,T)for i=1:3    xi=tt(i+1); yi=xi-tt(i);    xf=tt(end-3+i); yf=xf-tt(end-4+i);    tm{i}=tgap(xi,yi,xf,yf);    tp=[tt(i:i+1);tm{i};tt(end-3+i)];    dd(i)=max(abs(diff(1./diff(tp))));end[dd,C]=min([T,dd]);C=C-1;if C>0    tm=tm{C}(1:end-1);else    tm=[];endfunction [xm,ym]=tgap(x0,y0,xf,yf)m=(yf-y0)/(xf-x0); g=1/(1-m);k=1;b0=y0-m*x0;b1=(xf-yf-x0*g^k)/sum(g.^(1:k));t = tic;while 1    k=k+1;    b2=(xf-yf-x0*g^k)/sum(g.^(1:k));    db0=abs(b1-b0); db1=abs(b2-b0);    if ((db0-db1)<0)||toc(t) > 3, break, end    b1=b2;endN=k-1;xm(1)=(x0+b1)*g;ym(1)=xm(1)-x0;for i=2:N    xm(i,1)=g*(xm(i-1)+b1);    ym(i,1)=xm(i)-xm(i-1);end